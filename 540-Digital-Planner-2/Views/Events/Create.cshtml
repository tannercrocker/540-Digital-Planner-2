@model Digital_Planner.Models.Event

@{
    ViewBag.Title = "Create";
    ViewBag.picker_index = 0;
}
<script type="text/javascript">
    $(document).ready(function () {
        $('form').on('submit', function () {
            //Set the recurrences
            $(this).attr('action', $(this).attr('action') + $('#recurrence_counter').val());
        })
        $('#recurrence_counter').change(function () {
            //Ensure min/max
            if ($(this).val() > 24) {
                $(this).val("24");
            }
            if ($(this).val() < 0) {
                $(this).val("0");
            }
        });
    });
</script>
<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Event</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.AutoAssign, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AutoAssign, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AutoAssign, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        
        @{ ViewBag.picker_index++; }
        <div class="form-group">
            @Html.LabelFor(model => model.OccursAt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OccursAt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OccursAt, "", new { @class = "text-danger" })
                
            </div>
        </div>

        @{ ViewBag.picker_index++; }
        <div class="form-group">
            @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
            </div>
        </div>

        @{ ViewBag.picker_index++; }
        <div class="form-group">
            @Html.LabelFor(model => model.CompleteBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompleteBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompleteBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsComplete, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsComplete)
                    @Html.ValidationMessageFor(model => model.IsComplete, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        @* TODO - Replace with [current_user] *@
        @*
        <div class="form-group">
            @Html.LabelFor(model => model.UserID, "UserID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
            </div>
        </div>
        *@

        @* TODO - Limit to [current_user]'s categories *@
        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, "CategoryID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Category", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="contrl-label col-md-2">Recurrence</label>
            <div class="col-md-10">
                Occurs once a week for <input id ="recurrence_counter" class="text-center" type="number" min="0" max="24" value="0" /> weeks
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.Partial("_PreviousPageHyperlink")
    @* @Html.ActionLink("Back to List", "Index") *@
</div>
